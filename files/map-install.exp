#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Mon Apr 15 13:59:26 2019
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn configure.sh
match_max 100000
expect -exact "################################################\r
#### Centreon-Studio configuration settings ####\r
################################################\r
\r
/!\\ Do not use the forbidden character: \"|\" (install will fail)  /!\\\r
/!\\ For security reasons, each database user MUST have a password  /!\\\r
\r
Do you want to use the advanced installation mode ? \[y/N\] "
send -- "y\r"
expect -exact "y\r
\r
Configuring access to Centreon Web\r
/!\\ Must not be localhost, or 127.0.0.1, please use actual url, ip or hostname\r
/!\\ Must not contain protocol, must not contain /centreon/, exemple centreon.organization.com\r
\[?1034h-> Centreon Web url \[\] : "
send -- "localhost\r"
expect -exact "localhost\r
/!\\ Must be http:// or https://\r
\[?1034h-> Centreon Web url protocol \[http://\] : "
send -- "\r"
expect -exact "\r
/!\\ Must be a Centreon user with access to all resources and actions in Cenreon ACLs and to all external commands\r
\[?1034h-> Centreon user login \[\] : "
send -- "as"
expect -exact "\[K"
send -- "dmin\r"
expect -exact "dmin\r
\[?1034h-> Centreon user password \[\] : "
send -- "##CENTREON_ADMIN_PASSWORD##\r"
expect -exact "##CENTREON_ADMIN_PASSWORD##\r
\r
Configuring access to centreon database\r
\[?1034h-> centreon database address \[localhost\] : "
send -- "##CENTREON_HOST_DATABASE##\r"
expect -exact "##CENTREON_HOST_DATABASE##\r
\[?1034h-> centreon database port \[3306\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> centreon database name \[centreon\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> centreon database user \[centreon_map\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> centreon database password \[\] : "
send -- "##CENTREON_USER_DB_PASSWORD##\r"
expect -exact "##CENTREON_USER_DB_PASSWORD##\r
Testing configuration : Centreon database connection is OK.\\n\r
\r
Configuring access to centreon_storage database\r
\[?1034h-> centreon_storage database address \[##CENTREON_HOST_DATABASE##\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> centreon_storage database port \[3306\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> centreon_storage database name \[centreon_storage\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> centreon_storage database user \[centreon_map\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> centreon_storage database password \[##CENTREON_USER_DB_PASSWORD##\] : "
send -- "\r"
expect -exact "\r
Testing configuration : OK => You currently have 0 poller(s) running.\r
\r
Configuring Centreon broker output - these information will be used to create the output in Centreon configuration\r
\[?1034h-> broker address \[localhost\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> broker BBDO port - this port is specific to Centreon Map ouput, you should not modify it unless you know what you are doing \[5758\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> broker xml \[central-broker.xml\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> broker Centreon-Studio output \[Centreon-Studio\] : "
send -- "\r"
expect -exact "\r
\r
Configuring Centreon-Studio - these information will be used to create Centreon Studio database and user\r
\[?1034h-> Centreon-Studio database address \[localhost\] : "
send -- "##CENTREON_HOST_DATABASE##\r"
expect -exact "##CENTREON_HOST_DATABASE##\r
\[?1034h-> Centreon-Studio database port \[3306\] : "
send -- "\r"
expect -exact "\r
/!\\ Must be an empty database AND different from Centreon Map 3.x\r
\[?1034h-> Centreon-Studio database name \[centreon_studio\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> Centreon-Studio database user \[centreon_map\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> Centreon-Studio database password \[##CENTREON_USER_DB_PASSWORD##\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> Centreon-Studio log directory \[/var/log/centreon-studio/\] : "
send -- "\r"
expect -exact "\r
\[?1034h-> Centreon-Studio log file name \[centreon-studio.log\] : "
send -- "\r"
expect -exact "\r
\r
Configuring MapBox credentials - these information will be used to access Mapbox maps\r
This step is OPTIONAL and can be configured later, please check this page for more information\r
https://documentation.centreon.com/docs/centreon-map-4/en/latest/guide/exploitation/mapbox.html\r
\[?1034h-> Mapbox access token \[\] : "
send -- "\r"
expect -exact "\r
\r
################################################\r
##### Centreon-Studio configuration files ######\r
################################################\r
\r
\[?1034hWrite files configuration change ? \[Y/n\] "
send -- "y\r"
expect -exact "y\r
-> Copying tomcat configuration file\r
Saved tomcat configuration file server.xml into server.xml.map4.backup.\r
Replaced tomcat configuration file server.xml by map4.xml\r
Do you want the service tomcat to start on boot ? \[y/N\] "
send -- "n\r"
expect -exact "n\r
-> Copying template configuration \r
.... Done!\r
-> Create log directory -> Replacing macro inside configuration files ... Done!\r
\r
################################################\r
############ Centreon broker Output ############\r
################################################\r
\r
/!\\ The user you have configured to access Centreon database must have INSERT permission on Centreon DB /!\\\r
Otherwise, skip this step and configure broker's output manually\r
Create Centreon-Broker output for Centreon-Studio ? \[Y/n\] "
send -- "y\r"
expect -exact "y\r
\r
-> Check if Centreon-Broker output for Centreon-Studio exist (using previously configured access) : Centreon-Broker configuration for Centreon-Studio not found. Creating ... Done.\r
\r
################################################\r
############## DB Configuration ################\r
################################################\r
\r
Create Centreon-Studio Database ? \[Y/n\] "
send -- "y\r"
expect -exact "y\r
Type your mysql user credentials to create Studio Database\r
-> Login \[root\] : "
send -- "\r"
expect -exact "\r
-> Password \[\] : "
send -- "##MYSQL_ROOT_PASSWORD##\r"
expect eof
